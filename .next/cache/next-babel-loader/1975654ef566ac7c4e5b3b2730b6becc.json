{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/ge.martinez/Documents/gemanepa-projects/framingham-react-pwa/src/Link.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport NextLink from 'next/link';\nimport MuiLink from '@material-ui/core/Link';\nconst NextComposed = React.forwardRef(function NextComposed(props, ref) {\n  const {\n    as,\n    href,\n    prefetch\n  } = props,\n        other = _objectWithoutProperties(props, [\"as\", \"href\", \"prefetch\"]);\n\n  return __jsx(NextLink, {\n    href: href,\n    prefetch: prefetch,\n    as: as,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"a\", _extends({\n    ref: ref\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })));\n});\nNextComposed.propTypes = {\n  as: PropTypes.string,\n  href: PropTypes.string,\n  prefetch: PropTypes.bool\n}; // A styled version of the Next.js Link component:\n// https://nextjs.org/docs/#with-link\n\nfunction Link(props) {\n  const {\n    activeClassName = 'active',\n    className: classNameProps,\n    innerRef,\n    naked\n  } = props,\n        other = _objectWithoutProperties(props, [\"activeClassName\", \"className\", \"innerRef\", \"naked\"]);\n\n  const router = useRouter();\n  const className = clsx(classNameProps, {\n    [activeClassName]: router.pathname === props.href && activeClassName\n  });\n\n  if (naked) {\n    return __jsx(NextComposed, _extends({\n      className: className,\n      ref: innerRef\n    }, other, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n  return __jsx(MuiLink, _extends({\n    component: NextComposed,\n    className: className,\n    ref: innerRef\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n}\n\nLink.propTypes = {\n  activeClassName: PropTypes.string,\n  as: PropTypes.string,\n  className: PropTypes.string,\n  href: PropTypes.string,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  naked: PropTypes.bool,\n  onClick: PropTypes.func,\n  prefetch: PropTypes.bool\n};\nexport default React.forwardRef((props, ref) => __jsx(Link, _extends({}, props, {\n  innerRef: ref,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n})));","map":{"version":3,"sources":["/home/ge.martinez/Documents/gemanepa-projects/framingham-react-pwa/src/Link.js"],"names":["React","PropTypes","clsx","useRouter","NextLink","MuiLink","NextComposed","forwardRef","props","ref","as","href","prefetch","other","propTypes","string","bool","Link","activeClassName","className","classNameProps","innerRef","naked","router","pathname","oneOfType","func","object","onClick"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,MAAMC,YAAY,GAAGN,KAAK,CAACO,UAAN,CAAiB,SAASD,YAAT,CAAsBE,KAAtB,EAA6BC,GAA7B,EAAkC;AACtE,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA;AAAZ,MAAmCJ,KAAzC;AAAA,QAA+BK,KAA/B,4BAAyCL,KAAzC;;AAEA,SACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEG,IAAhB;AAAsB,IAAA,QAAQ,EAAEC,QAAhC;AAA0C,IAAA,EAAE,EAAEF,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,GAAG,EAAED;AAAR,KAAiBI,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD,CARoB,CAArB;AAUAP,YAAY,CAACQ,SAAb,GAAyB;AACvBJ,EAAAA,EAAE,EAAET,SAAS,CAACc,MADS;AAEvBJ,EAAAA,IAAI,EAAEV,SAAS,CAACc,MAFO;AAGvBH,EAAAA,QAAQ,EAAEX,SAAS,CAACe;AAHG,CAAzB,C,CAMA;AACA;;AACA,SAASC,IAAT,CAAcT,KAAd,EAAqB;AACnB,QAAM;AACJU,IAAAA,eAAe,GAAG,QADd;AAEJC,IAAAA,SAAS,EAAEC,cAFP;AAGJC,IAAAA,QAHI;AAIJC,IAAAA;AAJI,MAMFd,KANJ;AAAA,QAKKK,KALL,4BAMIL,KANJ;;AAOA,QAAMe,MAAM,GAAGpB,SAAS,EAAxB;AAEA,QAAMgB,SAAS,GAAGjB,IAAI,CAACkB,cAAD,EAAiB;AACrC,KAACF,eAAD,GAAmBK,MAAM,CAACC,QAAP,KAAoBhB,KAAK,CAACG,IAA1B,IAAkCO;AADhB,GAAjB,CAAtB;;AAIA,MAAII,KAAJ,EAAW;AACT,WAAO,MAAC,YAAD;AAAc,MAAA,SAAS,EAAEH,SAAzB;AAAoC,MAAA,GAAG,EAAEE;AAAzC,OAAuDR,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAED,SAAO,MAAC,OAAD;AAAS,IAAA,SAAS,EAAEP,YAApB;AAAkC,IAAA,SAAS,EAAEa,SAA7C;AAAwD,IAAA,GAAG,EAAEE;AAA7D,KAA2ER,KAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAEDI,IAAI,CAACH,SAAL,GAAiB;AACfI,EAAAA,eAAe,EAAEjB,SAAS,CAACc,MADZ;AAEfL,EAAAA,EAAE,EAAET,SAAS,CAACc,MAFC;AAGfI,EAAAA,SAAS,EAAElB,SAAS,CAACc,MAHN;AAIfJ,EAAAA,IAAI,EAAEV,SAAS,CAACc,MAJD;AAKfM,EAAAA,QAAQ,EAAEpB,SAAS,CAACwB,SAAV,CAAoB,CAACxB,SAAS,CAACyB,IAAX,EAAiBzB,SAAS,CAAC0B,MAA3B,CAApB,CALK;AAMfL,EAAAA,KAAK,EAAErB,SAAS,CAACe,IANF;AAOfY,EAAAA,OAAO,EAAE3B,SAAS,CAACyB,IAPJ;AAQfd,EAAAA,QAAQ,EAAEX,SAAS,CAACe;AARL,CAAjB;AAWA,eAAehB,KAAK,CAACO,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB,MAAC,IAAD,eAAUD,KAAV;AAAiB,EAAA,QAAQ,EAAEC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjC,CAAf","sourcesContent":["/* eslint-disable jsx-a11y/anchor-has-content */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport NextLink from 'next/link';\nimport MuiLink from '@material-ui/core/Link';\n\nconst NextComposed = React.forwardRef(function NextComposed(props, ref) {\n  const { as, href, prefetch, ...other } = props;\n\n  return (\n    <NextLink href={href} prefetch={prefetch} as={as}>\n      <a ref={ref} {...other} />\n    </NextLink>\n  );\n});\n\nNextComposed.propTypes = {\n  as: PropTypes.string,\n  href: PropTypes.string,\n  prefetch: PropTypes.bool,\n};\n\n// A styled version of the Next.js Link component:\n// https://nextjs.org/docs/#with-link\nfunction Link(props) {\n  const {\n    activeClassName = 'active',\n    className: classNameProps,\n    innerRef,\n    naked,\n    ...other\n  } = props;\n  const router = useRouter();\n\n  const className = clsx(classNameProps, {\n    [activeClassName]: router.pathname === props.href && activeClassName,\n  });\n\n  if (naked) {\n    return <NextComposed className={className} ref={innerRef} {...other} />;\n  }\n\n  return <MuiLink component={NextComposed} className={className} ref={innerRef} {...other} />;\n}\n\nLink.propTypes = {\n  activeClassName: PropTypes.string,\n  as: PropTypes.string,\n  className: PropTypes.string,\n  href: PropTypes.string,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  naked: PropTypes.bool,\n  onClick: PropTypes.func,\n  prefetch: PropTypes.bool,\n};\n\nexport default React.forwardRef((props, ref) => <Link {...props} innerRef={ref} />);\n"]},"metadata":{},"sourceType":"module"}